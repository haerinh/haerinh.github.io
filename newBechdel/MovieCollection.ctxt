#BlueJ class context
comment0.target=MovieCollection
comment0.text=\n\ Reads\ Movie\ data\ as\ well\ as\ alternateBechdel\ test\ results\ data\ to\ construct\ \n\ a\ collection\ of\ movies.\n\n\ @author\ Hae\ Rin\ Hong,\ Alejandra\ Robayo,\ Nile\ Rankin-Watson\n\ @version\ (9\ Dec\ 2022,\ 11\:44am)\n
comment1.params=
comment1.target=MovieCollection()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ MovieCollection\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ Creates\ a\ string\ representation\ of\ the\ collection\n\ @return\ a\ string\ representation\ of\ the\ collection\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\n\ Main\ method\ for\ testing\n
comment2.params=
comment2.target=void\ readMovies()
comment2.text=\n\ Reads\ the\ input\ file,\ and\ uses\ its\ first\ column\ (movie\ title)\ to\ create\ all\ movie\ objects.\n\ \n
comment3.params=
comment3.target=void\ readCast()
comment3.text=\n\ Reads\ the\ casts\ for\ each\ movie,\ from\ input\ casts\ file\n
comment4.params=
comment4.target=javafoundations.PriorityQueue\ rankMovies()
comment4.text=\n\ returns\ a\ PriorityQueue\ of\ movies\ in\ the\ provided\ data\ based\ on\ their\ feminist\ score.\ \n\ That\ is,\ if\ enqueued\ all\ the\ movies,\ movies\ will\ be\ dequeued\ in\ priority\ order,\n\ from\ most\ feminist\ to\ least\ feminist.\ \n\ @return\ \ \ \ returns\ a\ PriorityQueue\ of\ Movies\ in\ the\ provided\ data\ based\ on\ feminist\ score.\n
comment5.params=
comment5.target=java.util.LinkedList\ getActorNames()
comment5.text=\n\ Returns\ the\ names\ of\ all\ actors\ in\ the\ collection\n\ @return\ \ \ \ names\ of\ all\ actors\ in\ a\ linked\ list\n
comment6.params=
comment6.target=java.util.LinkedList\ getActors()
comment6.text=\n\ Returns\ all\ the\ Actors\ in\ the\ collection\n\ @return\ \ \ \ all\ actors\ in\ a\ linked\ list\n
comment7.params=
comment7.target=java.util.LinkedList\ getMovies()
comment7.text=\n\ Retrieves\ all\ movies\ in\ the\ collection\n\ @return\ \ \ \ Returns\ all\ the\ movies\ in\ a\ LinkedList\n
comment8.params=
comment8.target=java.util.LinkedList\ getMovieTitles()
comment8.text=\n\ Returns\ the\ titles\ of\ all\ movies\ in\ the\ collection\n\ @return\ \ \ \ Returns\ the\ titles\ of\ all\ movies\ in\ the\ collection\ in\ a\ linked\ list\n
comment9.params=n
comment9.target=java.util.LinkedList\ findAllMoviesPassedTestNum(int)
comment9.text=\n\ Returns\ a\ list\ of\ all\ Movies\ that\ pass\ the\ n-th\ Bechdel\ test\n\ @return\ \ \ \ a\ list\ of\ all\ Movies\ that\ pass\ the\ n-th\ Bechdel\ test\n
numComments=12
